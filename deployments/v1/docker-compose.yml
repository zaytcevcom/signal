version: "3.9"

services:
  httpx:
    image: ossrs/httpx:1
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.http.routers.nginx.rule=Host(`s.zaytcev.com`)
      - traefik.http.routers.nginx.rule=Host(`s.zaytcev.com`) || Host(`www.s.zaytcev.com`)
      - traefik.http.services.nginx.loadBalancer.server.port=80
      - traefik.http.middlewares.nginx-redirect.redirectRegex.regex=^(https?://)www.s.zaytcev.com/(.*)$$
      - traefik.http.middlewares.nginx-redirect.redirectRegex.replacement=$${1}s.zaytcev.com/$${2}
      - traefik.http.middlewares.nginx-redirect.redirectRegex.permanent=true
      - traefik.http.routers.nginx.middlewares=nginx-redirect,secure-headers
      - traefik.http.routers.nginx.entryPoints=https
      - traefik.http.routers.nginx.tls=true
      - traefik.http.routers.nginx.tls.certResolver=letsEncrypt
    command: [
      './bin/httpx-static',
      '-http', '80',
      '-proxy', 'http://signaling:1989/sig',
      '-proxy', 'http://srs:1985/rtc',
      '-proxy', 'http://srs:8080/'
    ]
    restart: unless-stopped
    networks:
      - traefik-public

  srs:
    image: ossrs/srs:5
    ports:
      - "1935:1935"
      - "8080:8080"
      - "1985:1985"
      - "8000:8000/udp"
    networks:
      - traefik-public

  signaling:
    image: registry.cn-hangzhou.aliyuncs.com/ossrs/signaling:1
    ports:
      - "1989:1989"
    networks:
      - traefik-public

networks:
  traefik-public:
    external: true
